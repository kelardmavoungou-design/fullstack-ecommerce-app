
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.15.0
 * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
 */
Prisma.prismaVersion = {
  client: "6.15.0",
  engine: "85179d7826409ee107a6ba334b5e305ae3fba9fb"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  full_name: 'full_name',
  email: 'email',
  phone_number: 'phone_number',
  password_hash: 'password_hash',
  google_id: 'google_id',
  facebook_id: 'facebook_id',
  avatar: 'avatar',
  is_verified: 'is_verified',
  wallet_balance: 'wallet_balance',
  total_sales: 'total_sales',
  bank_provider: 'bank_provider',
  bank_account: 'bank_account',
  bank_verified: 'bank_verified',
  bank_name: 'bank_name',
  seller_commission_rate: 'seller_commission_rate',
  role_id: 'role_id',
  created_at: 'created_at'
};

exports.Prisma.OtpScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  code: 'code',
  type: 'type',
  is_used: 'is_used',
  created_at: 'created_at',
  expires_at: 'expires_at'
};

exports.Prisma.ShopScalarFieldEnum = {
  id: 'id',
  seller_id: 'seller_id',
  name: 'name',
  description: 'description',
  logo: 'logo',
  is_active: 'is_active',
  created_at: 'created_at',
  address: 'address',
  phone: 'phone',
  email: 'email',
  opening_hours: 'opening_hours',
  facebook_url: 'facebook_url',
  twitter_url: 'twitter_url',
  instagram_url: 'instagram_url',
  youtube_url: 'youtube_url',
  footer_description: 'footer_description',
  latitude: 'latitude',
  longitude: 'longitude'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  shop_id: 'shop_id',
  name: 'name',
  description: 'description',
  price: 'price',
  stock: 'stock',
  category: 'category',
  variants: 'variants',
  image: 'image',
  images: 'images',
  created_at: 'created_at'
};

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  buyer_id: 'buyer_id',
  created_at: 'created_at'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cart_id: 'cart_id',
  product_id: 'product_id',
  quantity: 'quantity'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  buyer_id: 'buyer_id',
  shop_id: 'shop_id',
  delivery_person_id: 'delivery_person_id',
  status: 'status',
  total: 'total',
  payment_method: 'payment_method',
  shipping_address: 'shipping_address',
  delivery_code: 'delivery_code',
  is_delivered: 'is_delivered',
  delivery_latitude: 'delivery_latitude',
  delivery_longitude: 'delivery_longitude',
  created_at: 'created_at'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  quantity: 'quantity',
  price: 'price'
};

exports.Prisma.DeliveryScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  delivery_person_id: 'delivery_person_id',
  status: 'status',
  assigned_at: 'assigned_at',
  picked_up_at: 'picked_up_at',
  delivered_at: 'delivered_at',
  notes: 'notes',
  total_products: 'total_products',
  collected_products: 'collected_products',
  progress: 'progress',
  validation_code: 'validation_code',
  is_gps_active: 'is_gps_active'
};

exports.Prisma.DeliveryProductCollectionScalarFieldEnum = {
  id: 'id',
  delivery_id: 'delivery_id',
  product_id: 'product_id',
  shop_id: 'shop_id',
  collected_at: 'collected_at',
  collected_by: 'collected_by',
  status: 'status',
  notes: 'notes'
};

exports.Prisma.DeliveryTrackingScalarFieldEnum = {
  id: 'id',
  delivery_id: 'delivery_id',
  order_id: 'order_id',
  delivery_person_id: 'delivery_person_id',
  latitude: 'latitude',
  longitude: 'longitude',
  accuracy: 'accuracy',
  speed: 'speed',
  heading: 'heading',
  timestamp: 'timestamp'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  amount: 'amount',
  payment_method: 'payment_method',
  transaction_id: 'transaction_id',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.WishlistScalarFieldEnum = {
  id: 'id',
  buyer_id: 'buyer_id',
  product_id: 'product_id',
  created_at: 'created_at'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  buyer_id: 'buyer_id',
  product_id: 'product_id',
  rating: 'rating',
  comment: 'comment',
  created_at: 'created_at'
};

exports.Prisma.AdCampaignScalarFieldEnum = {
  id: 'id',
  shop_id: 'shop_id',
  title: 'title',
  description: 'description',
  status: 'status',
  budget_type: 'budget_type',
  total_budget: 'total_budget',
  daily_budget: 'daily_budget',
  spent_budget: 'spent_budget',
  start_date: 'start_date',
  end_date: 'end_date',
  created_at: 'created_at',
  updated_at: 'updated_at',
  submitted_at: 'submitted_at',
  approved_by: 'approved_by',
  approved_at: 'approved_at',
  rejection_reason: 'rejection_reason',
  last_status_change: 'last_status_change',
  notification_sent: 'notification_sent'
};

exports.Prisma.AdScalarFieldEnum = {
  id: 'id',
  campaign_id: 'campaign_id',
  title: 'title',
  content: 'content',
  image: 'image',
  target_url: 'target_url',
  target_age_min: 'target_age_min',
  target_age_max: 'target_age_max',
  target_regions: 'target_regions',
  target_categories: 'target_categories',
  placement: 'placement',
  cost_model: 'cost_model',
  cost_per_click: 'cost_per_click',
  cost_per_impression: 'cost_per_impression',
  status: 'status',
  is_active: 'is_active',
  created_at: 'created_at'
};

exports.Prisma.AdImpressionScalarFieldEnum = {
  id: 'id',
  campaign_id: 'campaign_id',
  ad_id: 'ad_id',
  user_id: 'user_id',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  placement: 'placement',
  created_at: 'created_at'
};

exports.Prisma.AdClickScalarFieldEnum = {
  id: 'id',
  campaign_id: 'campaign_id',
  ad_id: 'ad_id',
  user_id: 'user_id',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  placement: 'placement',
  cost: 'cost',
  created_at: 'created_at',
  session_id: 'session_id',
  is_suspicious: 'is_suspicious',
  fraud_reason: 'fraud_reason'
};

exports.Prisma.AdminReportScalarFieldEnum = {
  id: 'id',
  reported_by: 'reported_by',
  target_type: 'target_type',
  target_id: 'target_id',
  reason: 'reason',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.PlatformStatsScalarFieldEnum = {
  id: 'id',
  date: 'date',
  total_users: 'total_users',
  total_orders: 'total_orders',
  total_sales: 'total_sales',
  total_ads: 'total_ads'
};

exports.Prisma.PlatformWalletScalarFieldEnum = {
  id: 'id',
  balance: 'balance',
  updated_at: 'updated_at'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  message: 'message',
  is_read: 'is_read',
  created_at: 'created_at'
};

exports.Prisma.MtnPaymentScalarFieldEnum = {
  id: 'id',
  reference_id: 'reference_id',
  order_id: 'order_id',
  phone_number: 'phone_number',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  transaction_id: 'transaction_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.AirtelPaymentScalarFieldEnum = {
  id: 'id',
  transaction_id: 'transaction_id',
  airtel_transaction_id: 'airtel_transaction_id',
  order_id: 'order_id',
  phone_number: 'phone_number',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MtnDisbursementScalarFieldEnum = {
  id: 'id',
  reference_id: 'reference_id',
  recipient_phone: 'recipient_phone',
  amount: 'amount',
  currency: 'currency',
  description: 'description',
  status: 'status',
  transaction_id: 'transaction_id',
  transfer_type: 'transfer_type',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RefundScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  amount: 'amount',
  reason: 'reason',
  status: 'status',
  disbursement_reference: 'disbursement_reference',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CommissionScalarFieldEnum = {
  id: 'id',
  seller_id: 'seller_id',
  amount: 'amount',
  description: 'description',
  status: 'status',
  disbursement_reference: 'disbursement_reference',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  full_name: 'full_name',
  email: 'email',
  phone_number: 'phone_number',
  password_hash: 'password_hash',
  google_id: 'google_id',
  facebook_id: 'facebook_id',
  avatar: 'avatar',
  bank_provider: 'bank_provider',
  bank_account: 'bank_account',
  bank_name: 'bank_name'
};

exports.Prisma.OtpOrderByRelevanceFieldEnum = {
  code: 'code'
};

exports.Prisma.ShopOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  logo: 'logo',
  address: 'address',
  phone: 'phone',
  email: 'email',
  opening_hours: 'opening_hours',
  facebook_url: 'facebook_url',
  twitter_url: 'twitter_url',
  instagram_url: 'instagram_url',
  youtube_url: 'youtube_url',
  footer_description: 'footer_description'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.ProductOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  category: 'category',
  image: 'image',
  images: 'images'
};

exports.Prisma.OrderOrderByRelevanceFieldEnum = {
  shipping_address: 'shipping_address',
  delivery_code: 'delivery_code'
};

exports.Prisma.DeliveryOrderByRelevanceFieldEnum = {
  notes: 'notes',
  validation_code: 'validation_code'
};

exports.Prisma.DeliveryProductCollectionOrderByRelevanceFieldEnum = {
  status: 'status',
  notes: 'notes'
};

exports.Prisma.PaymentOrderByRelevanceFieldEnum = {
  payment_method: 'payment_method',
  transaction_id: 'transaction_id',
  status: 'status'
};

exports.Prisma.ReviewOrderByRelevanceFieldEnum = {
  comment: 'comment'
};

exports.Prisma.AdCampaignOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  rejection_reason: 'rejection_reason'
};

exports.Prisma.AdOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content',
  image: 'image',
  target_url: 'target_url',
  target_regions: 'target_regions',
  target_categories: 'target_categories'
};

exports.Prisma.AdImpressionOrderByRelevanceFieldEnum = {
  ip_address: 'ip_address',
  user_agent: 'user_agent'
};

exports.Prisma.AdClickOrderByRelevanceFieldEnum = {
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  session_id: 'session_id',
  fraud_reason: 'fraud_reason'
};

exports.Prisma.AdminReportOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.NotificationOrderByRelevanceFieldEnum = {
  message: 'message'
};

exports.Prisma.MtnPaymentOrderByRelevanceFieldEnum = {
  reference_id: 'reference_id',
  phone_number: 'phone_number',
  currency: 'currency',
  status: 'status',
  transaction_id: 'transaction_id'
};

exports.Prisma.AirtelPaymentOrderByRelevanceFieldEnum = {
  transaction_id: 'transaction_id',
  airtel_transaction_id: 'airtel_transaction_id',
  phone_number: 'phone_number',
  currency: 'currency',
  status: 'status'
};

exports.Prisma.MtnDisbursementOrderByRelevanceFieldEnum = {
  reference_id: 'reference_id',
  recipient_phone: 'recipient_phone',
  currency: 'currency',
  description: 'description',
  status: 'status',
  transaction_id: 'transaction_id',
  transfer_type: 'transfer_type'
};

exports.Prisma.RefundOrderByRelevanceFieldEnum = {
  reason: 'reason',
  status: 'status',
  disbursement_reference: 'disbursement_reference'
};

exports.Prisma.CommissionOrderByRelevanceFieldEnum = {
  description: 'description',
  status: 'status',
  disbursement_reference: 'disbursement_reference'
};
exports.roles_name = exports.$Enums.roles_name = {
  buyer: 'buyer',
  seller: 'seller',
  superadmin: 'superadmin',
  delivery: 'delivery'
};

exports.otps_type = exports.$Enums.otps_type = {
  registration: 'registration',
  login: 'login',
  recovery: 'recovery'
};

exports.orders_status = exports.$Enums.orders_status = {
  pending: 'pending',
  paid: 'paid',
  shipped: 'shipped',
  delivered: 'delivered',
  cancelled: 'cancelled'
};

exports.orders_payment_method = exports.$Enums.orders_payment_method = {
  mobile_money: 'mobile_money',
  cash_on_delivery: 'cash_on_delivery'
};

exports.deliveries_status = exports.$Enums.deliveries_status = {
  assigned: 'assigned',
  picked_up: 'picked_up',
  in_transit: 'in_transit',
  delivered: 'delivered',
  failed: 'failed'
};

exports.ad_campaigns_status = exports.$Enums.ad_campaigns_status = {
  draft: 'draft',
  pending: 'pending',
  active: 'active',
  paused: 'paused',
  completed: 'completed',
  expired: 'expired',
  cancelled: 'cancelled'
};

exports.ad_budget_type = exports.$Enums.ad_budget_type = {
  total: 'total',
  daily: 'daily'
};

exports.ad_placement = exports.$Enums.ad_placement = {
  home: 'home',
  sidebar: 'sidebar',
  product_page: 'product_page',
  search_results: 'search_results',
  category_page: 'category_page'
};

exports.ad_cost_model = exports.$Enums.ad_cost_model = {
  cpc: 'cpc',
  cpm: 'cpm',
  cpa: 'cpa'
};

exports.ads_status = exports.$Enums.ads_status = {
  pending: 'pending',
  approved: 'approved',
  rejected: 'rejected',
  active: 'active',
  paused: 'paused',
  completed: 'completed',
  expired: 'expired'
};

exports.admin_reports_target_type = exports.$Enums.admin_reports_target_type = {
  user: 'user',
  shop: 'shop',
  product: 'product'
};

exports.admin_reports_status = exports.$Enums.admin_reports_status = {
  open: 'open',
  closed: 'closed'
};

exports.Prisma.ModelName = {
  Role: 'Role',
  User: 'User',
  Otp: 'Otp',
  Shop: 'Shop',
  Product: 'Product',
  Cart: 'Cart',
  CartItem: 'CartItem',
  Order: 'Order',
  OrderItem: 'OrderItem',
  Delivery: 'Delivery',
  DeliveryProductCollection: 'DeliveryProductCollection',
  DeliveryTracking: 'DeliveryTracking',
  Payment: 'Payment',
  Wishlist: 'Wishlist',
  Review: 'Review',
  AdCampaign: 'AdCampaign',
  Ad: 'Ad',
  AdImpression: 'AdImpression',
  AdClick: 'AdClick',
  AdminReport: 'AdminReport',
  PlatformStats: 'PlatformStats',
  PlatformWallet: 'PlatformWallet',
  Notification: 'Notification',
  MtnPayment: 'MtnPayment',
  AirtelPayment: 'AirtelPayment',
  MtnDisbursement: 'MtnDisbursement',
  Refund: 'Refund',
  Commission: 'Commission'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
